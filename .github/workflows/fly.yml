name: 'Flyway GitHub Pipeline'
 
on:
  push:
    branches:
      - main
      
env:
    SQLFLUFF_DIALECT: postgres
    DOCKER_IMAGE: redgate/flyway
    SCHEMAS: devdb, proddb
 
jobs:
  Continuous-Integration-Build:
    name: Continuous Integration Build
    runs-on: ubuntu-20.04
 
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
                       
      - name: Continuous Integration Flyway Clean Migrate
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_BUILD_URL }}"
          -user="${{ secrets.DB_BUILD_USERNAME }}"
          -password="${{ secrets.DB_BUILD_PASSWORD }}"
          -cleanDisabled=false clean migrate -schemas="${{ env.SCHEMAS }}"
      - name: Flyway Info
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_BUILD_URL }}"
          -user="${{ secrets.DB_BUILD_USERNAME }}"
          -password="${{ secrets.DB_BUILD_PASSWORD }}" 
          info -schemas="${{ env.SCHEMAS }}"
 
      - name: Flyway Info Production
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_PROD_USERNAME }}" 
          -password="${{ secrets.DB_PROD_PASSWORD }}"
          info -schemas="${{ env.SCHEMAS }}"
                 
      - name: Flyway Check
        run: >-
          docker run --rm \
            --volume ${{ github.workspace }}/migrations:/flyway/sql:ro \
            --volume ${{ github.workspace }}/reports:/flyway/reports \
            -e ${{ secrets.FLYWAY_LICENSE_KEY }} \
            "${{ env.DOCKER_IMAGE }}" \
            -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" \
            -url="${{ secrets.DB_PROD_URL }}" \
            -user="${{ secrets.DB_PROD_USERNAME }}" \
            -password="${{ secrets.DB_PROD_PASSWORD }}" \
            -baselineOnMigrate=true check -changes -drift -dryrun -schemas="${{ env.SCHEMAS }}" -outOfOrder=true -connectRetries=10 \
            -check.buildUrl="${{ secrets.DB_BUILD_URL }}" \
            -check.buildUser="${{ secrets.DB_BUILD_USERNAME }}" \
            -check.buildPassword="${{ secrets.DB_BUILD_PASSWORD }}" \
            -check.reportFilename="/flyway/reports/report.html"
            
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: Database Report
          path: reports/
