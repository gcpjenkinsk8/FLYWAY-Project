name: 'Flyway Dev Deploy Module'
 
on:
# workflow_dispatch: 
#on:
 # workflow_run:
  #  workflows:
   #   - Dry Run Module
    #types:
     # - completed
      
  workflow_dispatch:       
   inputs:
       SchemaName:
        description: 'Schema Name'     
        required: true
       MigrationFolder:
        description: 'Migration Folder Path'     
        required: true
    
env:
    DOCKER_IMAGE: redgate/flyway
    SCHEMAS: '${{ github.event.inputs.SchemaName }}'
    MigrationPath: '${{ github.event.inputs.MigrationFolder }}'
 
jobs:
          
  Deploy-Test:
      name: Deploy to Dev
      runs-on: ubuntu-20.04
   #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
      steps:
      - uses: actions/checkout@v3.0.0
      - run: >- 
         mkdir -p ${{ github.workspace }}/reports
      - run: >- 
         ls
      - run: >-    
         docker run --rm
          --volume ${{ github.workspace }}/"${{ env.MigrationPath }}":/flyway/sql:ro
          --volume ${{ github.workspace }}/reports:/flyway/reports
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"/"${{ env.SCHEMAS }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"  
          -reportFilename="reports/report"
          info -schemas="${{ env.SCHEMAS }}"
   
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/"${{ env.MigrationPath }}":/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"/"${{ env.SCHEMAS }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"   
          migrate -schemas="${{ env.SCHEMAS }}" -outOfOrder=false -baselineOnMigrate="true" -baselineVersion="0.0" -baselineDescription='existing version' -validateOnMigrate=true
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/"${{ env.MigrationPath }}":/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
          -url="${{ secrets.DB_TEST_URL }}"/"${{ env.SCHEMAS }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"   
          info -schemas="${{ env.SCHEMAS }}"


